% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/guide.R
\name{Guide}
\alias{Guide}
\alias{GuideNull}
\title{Graphical represntation of Scales}
\description{
Guide objects are a graphical representation of \link{Scale}s, in that
they communicate the relationship between user data values and
mapped data values. Each \link{Scale} must have a Guide, although this
can be (and often is) \code{GuideNull}, which draws nothing). Guides which
have the same name, class, breaks, and labels are merged together,
such that in the final plot there may be more than one scale represented
by one guide. All guides except \code{GuideNull} will probably have to be
subclassed for each \link{Renderer}.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Guide$new()}}
\item \href{#method-title}{\code{Guide$title()}}
\item \href{#method-position}{\code{Guide$position()}}
\item \href{#method-aesthetics}{\code{Guide$aesthetics()}}
\item \href{#method-train}{\code{Guide$train()}}
\item \href{#method-train_layers}{\code{Guide$train_layers()}}
\item \href{#method-merge}{\code{Guide$merge()}}
\item \href{#method-render}{\code{Guide$render()}}
\item \href{#method-set_title}{\code{Guide$set_title()}}
\item \href{#method-set_key}{\code{Guide$set_key()}}
\item \href{#method-set_position}{\code{Guide$set_position()}}
\item \href{#method-make_key}{\code{Guide$make_key()}}
\item \href{#method-aesthetics_from_key}{\code{Guide$aesthetics_from_key()}}
\item \href{#method-clone}{\code{Guide$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$new()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Create a Guide object.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-title"></a>}}
\subsection{Method \code{title()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$title()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Return the title that should be displayed by this guide.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-position"></a>}}
\subsection{Method \code{position()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$position()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Return the object describing the position of this guide (specific
to the \link{Renderer}). A value of \code{NULL} means it should not be displayed;
a value of \code{waiver()} means the position is unspecified.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aesthetics"></a>}}
\subsection{Method \code{aesthetics()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$aesthetics()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The aesthetics represented by this \code{Guide}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train"></a>}}
\subsection{Method \code{train()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$train(scale)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Add information from a \link{Scale} to this guide. This creates the
\verb{$key} field, which is a \code{\link[tibble:tibble]{tibble::tibble()}} with a column for each
aesthetic and a \code{.breaks} and \code{.labels} column.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train_layers"></a>}}
\subsection{Method \code{train_layers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$train_layers(layers, renderer)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Add information from a \link{LayerList} to this object. This is used
to assemble the default aesthetic values and geometry primatives
that will be displayed by the guide.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-merge"></a>}}
\subsection{Method \code{merge()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$merge(guide)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Merges information from another guide into this guide. The default implementation
is to merge only if the Guides have the same class, breaks, labels, title, and
position. This would occur if a user maps the same column to two aesthetics.
Returns \code{TRUE} if a merge occured, \code{FALSE} otherwise. This is usually called by
\link{GuideList}'s \verb{$merge_all()} method.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-render"></a>}}
\subsection{Method \code{render()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$render(panel, renderer)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Renders the guide.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_title"></a>}}
\subsection{Method \code{set_title()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$set_title(title)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_key"></a>}}
\subsection{Method \code{set_key()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$set_key(key)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Sets the \verb{$key} for this Guide, which is a \code{\link[tibble:tibble]{tibble::tibble()}} with
a column for each aesthetic and a \code{.breaks} and \code{.labels} column.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_position"></a>}}
\subsection{Method \code{set_position()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$set_position(position)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Sets the \verb{$position()} for this guide. Use \code{NULL} to hide,
\code{waiver()} to let the \link{Renderer} choose, or some other
\link{Renderer}-specific value.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-make_key"></a>}}
\subsection{Method \code{make_key()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$make_key(scale, censor = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Details}{
Creates the \verb{$key} based on a \link{Scale}, optionally censoring the breaks
to ensure they are within the \link{Scale}'s \verb{$limits()}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aesthetics_from_key"></a>}}
\subsection{Method \code{aesthetics_from_key()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$aesthetics_from_key(key)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Guide$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[ggr6:Guide]{ggr6::Guide}} -> \code{GuideNull}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-train}{\code{GuideNull$train()}}
\item \href{#method-train_layers}{\code{GuideNull$train_layers()}}
\item \href{#method-render}{\code{GuideNull$render()}}
\item \href{#method-clone}{\code{GuideNull$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="aesthetics">}\href{../../ggr6/html/Guide.html#method-aesthetics}{\code{ggr6::Guide$aesthetics()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="aesthetics_from_key">}\href{../../ggr6/html/Guide.html#method-aesthetics_from_key}{\code{ggr6::Guide$aesthetics_from_key()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="initialize">}\href{../../ggr6/html/Guide.html#method-initialize}{\code{ggr6::Guide$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="make_key">}\href{../../ggr6/html/Guide.html#method-make_key}{\code{ggr6::Guide$make_key()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="merge">}\href{../../ggr6/html/Guide.html#method-merge}{\code{ggr6::Guide$merge()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="position">}\href{../../ggr6/html/Guide.html#method-position}{\code{ggr6::Guide$position()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="set_key">}\href{../../ggr6/html/Guide.html#method-set_key}{\code{ggr6::Guide$set_key()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="set_position">}\href{../../ggr6/html/Guide.html#method-set_position}{\code{ggr6::Guide$set_position()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="set_title">}\href{../../ggr6/html/Guide.html#method-set_title}{\code{ggr6::Guide$set_title()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ggr6" data-topic="Guide" data-id="title">}\href{../../ggr6/html/Guide.html#method-title}{\code{ggr6::Guide$title()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train"></a>}}
\subsection{Method \code{train()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuideNull$train(scale, layers)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train_layers"></a>}}
\subsection{Method \code{train_layers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuideNull$train_layers(layers, renderer)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-render"></a>}}
\subsection{Method \code{render()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuideNull$render(panel, renderer)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuideNull$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
